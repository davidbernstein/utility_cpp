/* * Copyright (C) 2004-2018 David Bernstein <david.h.bernstein@gmail.com> * * This file is part of utility_cpp. * * utility_cpp is free software: you can redistribute it and/or modify * it under the terms of the GNU General Public License as published by * the Free Software Foundation, either version 3 of the License, or * (at your option) any later version. * * utility_cpp is distributed in the hope that it will be useful, * but WITHOUT ANY WARRANTY; without even the implied warranty of * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the * GNU General Public License for more details. * * You should have received a copy of the GNU General Public License * along with utility_cpp.  If not, see <http://www.gnu.org/licenses/>.*/#include "xydata.h"using namespace utility;using utility std;void XYData::Make(const Mesh &mesh, short speciesNumber){	EraseData();			Array<Element*> pE;	mesh.GetElements(pE);		Point c;	for (long i = 0; i < pE.Size(); ++i) {		pE[i]->Centroid(c);		AddX(c.X());				short n0 = pE[i]->GetOccupancyData()->NumOccupants(speciesNumber);		AddY((double) n0);	}	return;}void XYData::Make(const Matrix<double> &m, short rowIndex){	EraseData();		for (long i = 0; i < m.NumColumns(); ++i) {		AddX(i);		AddY(m(rowIndex, i));	}	return;}